/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        left_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 15>;
        };

        right_paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 3>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 8>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 27>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
        };

        left_arrow {
            bindings = <&kp LESS_THAN>;
            key-positions = <15 14>;
        };

        right_arrow {
            bindings = <&kp GREATER_THAN>;
            key-positions = <20 21>;
        };

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <12 13>;
        };

        ctrlspace {
            bindings = <&tk LCTRL SPACE>;
            key-positions = <38 39>;
        };

        leftboot {
            bindings = <&bootloader>;
            key-positions = <0 5 38>;
        };

        rightboot {
            bindings = <&bootloader>;
            key-positions = <11 6 39>;
        };
    };

    macros {
        tk: tk {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "TK";
        };

        ttk: ttk {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER>;

            label = "TTK";
        };
    };

    behaviors {
        index_num: index_num {
            compatible = "zmk,behavior-hold-tap";
            label = "INDEX_NUM";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 18 30 31 7 19 20 21 22 23 10 11 9 8 32 35 34 33 41 40 39 38 37 36>;
        };

        thumb_nav: thumb_nav {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_NAV";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            hold-trigger-key-positions = <36 37 38 39 40 41 18 6 30 32 31 19 7 8 20 9 21 33 11 10 22 23 35 34>;
        };

        thumb_sym: thumb_sym {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_SYM";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            flavor = "balanced";
            hold-trigger-key-positions = <19 31 33 20 32 39 40 41 38 37 36 0 12 13 14 15 17 5 4 16 3 2 1 25 27 26 29 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB              &kp Q  &kp W  &kp E             &kp R                   &kp T             &kp Y           &kp U               &kp I              &kp O    &kp P     &lt 4 DELETE
&mt LEFT_ALT ESCAPE  &kp A  &kp S  &kp D             &kp F                   &kp G             &kp H           &kp J               &kp K              &kp L    &kp SEMI  &kp SQT
&kp LEFT_GUI         &kp Z  &kp X  &kp C             &kp V                   &index_num 1 B    &kp N           &kp M               &kp COMMA          &kp DOT  &kp FSLH  &kp RIGHT_ALT
                                   &kp LEFT_CONTROL  &thumb_nav 2 BACKSPACE  &kp SPACE         &kp LEFT_SHIFT  &thumb_sym 3 ENTER  &kp RIGHT_CONTROL
            >;

            label = "Base";
        };

        number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Navigation";
            bindings = <
&none  &none  &none  &none   &none   &none     &kp SLASH     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS  &kp EXCL
&none  &none  &none  &none   &none   &none     &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &kp PERCENT
&none  &none  &none  &none   &none   &none     &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &kp CARET
                     &trans  &trans  &trans    &trans        &trans        &trans
            >;

            label = "Number";
        };

        navigation {
            bindings = <
&none  &none  &none  &none   &none   &none     &tk LCTRL LEFT  &kp PAGE_DOWN   &kp PAGE_UP   &tk LCTRL RIGHT_ARROW  &ttk LEFT_BRACKET G  &ttk RIGHT_BRACKET G
&none  &none  &none  &none   &none   &none     &kp LEFT        &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW        &ttk LEFT_BRACKET F  &ttk RIGHT_BRACKET F
&none  &none  &none  &none   &none   &none     &tk LCTRL HOME  &kp HOME        &kp END       &tk LCTRL END          &ttk LEFT_BRACKET D  &ttk RIGHT_BRACKET D
                     &trans  &trans  &trans    &trans          &trans          &trans
            >;

            label = "Navigation";
        };

        symbol {
            bindings = <
&kp GRAVE  &kp EXCL       &kp AT     &kp POUND  &kp DLLR   &kp PRCNT    &none   &none                    &none                    &none       &none  &none
&kp TILDE  &kp CARET      &kp AMPS   &kp ASTRK  &kp UNDER  &kp EQUAL    &none   &ttk COLON EQUAL         &ttk MINUS GREATER_THAN  &none       &none  &none
&none      &kp BACKSLASH  &kp SLASH  &kp PIPE   &kp PLUS   &kp MINUS    &none   &ttk EQUAL GREATER_THAN  &kp COMMA                &kp PERIOD  &none  &none
                                     &trans     &trans     &trans       &trans  &trans                   &trans
            >;

            label = "Symbol";
        };

        function {
            bindings = <
&none  &kp F9  &kp F10  &kp F11  &kp F12  &kp C_VOLUME_UP      &none         &none         &none         &none         &none  &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &kp K_MUTE           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none  &none
&none  &kp F1  &kp F2   &kp F3   &kp F4   &kp C_VOLUME_DOWN    &out OUT_USB  &none         &none         &none         &none  &bt BT_CLR
                        &none    &none    &none                &none         &none         &none
            >;

            label = "Function";
        };
    };
};
